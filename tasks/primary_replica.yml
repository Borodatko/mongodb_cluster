---
- name: Replace storage path
  become: true
  ansible.builtin.replace:
    path: /etc/mongod.conf
    regexp: "dbPath: /var/lib/mongo"
    replace: "dbPath: /mongo"
  tags:
    - mongo
    - primary_replica

- name: Start mongod
  become: true
  ansible.builtin.systemd:
    name: mongod
    enabled: true
    masked: false
    state: started
  tags:
    - mongo
    - primary_replica

- name: Create admin user
  community.mongodb.mongodb_user:
    database: "{{ mongo_database }}"
    name: "{{ mongodb_user }}"
    password: "{{ mongodb_pass }}"
    state: present
    roles: "{{ mongodb_role }}"
  tags:
    - mongo
    - primary_replica

- name: Check if key exists
  become: true
  ansible.builtin.stat:
    path: /var/lib/mongo/mongo-keyfile
  register: myKey
  tags:
    - mongo
    - primary_replica

- name: Generate private key
  become: true
  ansible.builtin.shell: 'openssl rand -base64 756 > /var/lib/mongo/mongo-keyfile'
  when: not myKey.stat.exists
  tags:
    - mongo
    - primary_replica

- name: Set permissions
  become: true
  ansible.builtin.file:
    path: /var/lib/mongo/mongo-keyfile
    mode: '0400'
    owner: mongod
    group: mongod
  tags:
    - mongo
    - primary_replica

#  community.crypto.openssl_privatekey:
#    path: /var/lib/mongo/mongo-keyfile
#    mode: '0400'
#    owner: mongod
#    group: mongod

- name: Mongo - Get key
  become: true
  ansible.builtin.fetch:
    src: /var/lib/mongo/mongo-keyfile
    dest: /tmp/mongo-keyfile
    flat: true
  tags:
    - mongo
    - primary_replica
...
